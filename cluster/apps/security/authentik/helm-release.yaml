---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: security
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.goauthentik.io/
      chart: authentik
      version: 5.2.1
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
      interval: 5m
  dependsOn:
    - name: traefik
      namespace: networking
  values:
    image:
      repository: ghcr.io/goauthentik/server
      tag: 2022.2.1
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          hajimari.io/enable: "true"
          hajimari.io/icon: "account-check"
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
        hosts:
          - host: "auth.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "auth.${SECRET_DOMAIN}"
            secretName: authentik-cert
    geoip:
      enabled: false
    authentik:
      secret_key: ${SECRET_AUTHENTIK_KEY}
      log_level: debug

      outposts:
        docker_image_base: ghcr.io/goauthentik/%(type)s:%(version)s

      postgresql:
        host: '{{ .Release.Name }}-postgresql'
        name: authentik
        user: authentik
        password: ${SECRET_AUTHENTIK_POSTGRES_PASSWORD}
      redis:
        host: '{{ .Release.Name }}-redis-master'
        password: ${SECRET_AUTHENTIK_REDIS_PASSWORD}

    postgresql:
      enabled: true
      persistence:
        enabled: true
        existingClaim: authentik-postgresql-pvc

      postgresqlUsername: authentik
      postgresqlDatabase: authentik
      postgresqlPassword: ${SECRET_AUTHENTIK_POSTGRES_PASSWORD}

    redis:
      enabled: true
      auth:
        enabled: true
        password: ${SECRET_AUTHENTIK_REDIS_PASSWORD}
